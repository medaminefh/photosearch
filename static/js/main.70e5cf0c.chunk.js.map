{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","config.js","App.js","index.js"],"names":["ImageCard","image","webformatURL","user","tags","views","likes","downloads","className","alt","src","split","map","i","a","key","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","CONFIG","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","axios","get","then","d","data","hits","catch","err","console","error","length","img","id","ReactDOM","render","document","querySelector"],"mappings":"8NA0CeA,EAvCG,SAAC,GAEZ,IAAD,IADJC,MAASC,EACL,EADKA,aAAcC,EACnB,EADmBA,KAAMC,EACzB,EADyBA,KAAMC,EAC/B,EAD+BA,MAAOC,EACtC,EADsCA,MAAOC,EAC7C,EAD6CA,UAEjD,OACE,yBAAKC,UAAU,sEACb,yBAAKC,IAAI,GAAGC,IAAKR,EAAcM,UAAU,WACzC,yBAAKA,UAAU,aACb,yBAAKA,UAAU,0CAAf,YACYL,GAEZ,4BACE,4BACE,2CACCE,GACG,IACN,4BACE,+CACCE,GACG,IACN,4BACE,2CACCD,KAIP,yBAAKE,UAAU,aACZJ,EAAKO,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,OACnB,0BACEC,IAAKD,EACLN,UAAU,2GAFZ,IAIIK,SCCCG,EAjCK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACdC,mBAAS,IADK,mBAC/BC,EAD+B,KACzBC,EADyB,KAUtC,OACE,yBAAKZ,UAAU,kDACb,0BAAMa,SANW,SAACC,GACpBA,EAAEC,iBACFN,EAAWE,IAIqBX,UAAU,mBACtC,yBAAKA,UAAU,8DACb,2BACEA,UAAU,kHACVgB,KAAK,OACLC,YAAY,uBACZC,SAhBW,SAACJ,GACpBF,EAAQE,EAAEK,OAAOC,UAkBX,4BACEpB,UAAU,kIACVgB,KAAK,UAFP,cCvBGK,EACF,qCC+CIC,EA1CH,WAAO,IAAD,EACYZ,mBAAS,IADrB,mBACTa,EADS,KACDC,EADC,OAEkBd,oBAAS,GAF3B,mBAETe,EAFS,KAEEC,EAFF,OAGQhB,mBAAS,IAHjB,mBAGTiB,EAHS,KAGHC,EAHG,KAqBhB,OAhBAC,qBAAU,WACRC,IACGC,IADH,uCAEoCV,EAFpC,cAEwDM,EAFxD,kCAIGK,MACC,SAACC,GAAO,IACEC,EAASD,EAATC,KACRV,EAAUU,EAAKC,MACfT,GAAa,KAEf,CAACC,IAEFS,OAAM,SAACC,GAAD,OAASC,QAAQC,MAAM,QAAUF,SAI1C,yBAAKrC,UAAU,qBACb,kBAAC,EAAD,CAAaS,WAAY,SAACE,GAAD,OAAUiB,EAAQjB,OACzCc,IAAcF,EAAOiB,QACrB,wBAAIxC,UAAU,sCAAd,2CAIDyB,EACC,wBAAIzB,UAAU,sCAAd,eAEA,yBAAKA,UAAU,mFACZuB,EAAOnB,KAAI,SAACqC,GAAD,OACV,kBAAC,EAAD,CAAWhD,MAAOgD,EAAKlC,IAAKkC,EAAIC,W,MCnC5CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.70e5cf0c.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst ImageCard = ({\n  image: { webformatURL, user, tags, views, likes, downloads },\n}) => {\n  return (\n    <div className=\"max-w-sm xs:max-w-xl sm:max-w-xl rounded overflow-hidden shadow-lg\">\n      <img alt=\"\" src={webformatURL} className=\"w-full\" />\n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\n          Photo by {user}\n        </div>\n        <ul>\n          <li>\n            <strong>Views: </strong>\n            {views}\n          </li>{\" \"}\n          <li>\n            <strong>Downloads: </strong>\n            {downloads}\n          </li>{\" \"}\n          <li>\n            <strong>Likes: </strong>\n            {likes}\n          </li>\n        </ul>\n      </div>\n      <div className=\"px-6 py-4\">\n        {tags.split(\",\").map((i, a) => (\n          <span\n            key={a}\n            className=\"sm:text-center inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\n          >\n            #{i}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCard;\n","import React, { useState } from \"react\";\n\nconst ImageSearch = ({ searchText }) => {\n  const [text, setText] = useState(\"\");\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    searchText(text);\n  };\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\n      <form onSubmit={handleSubmit} className=\"w-full max-w-sm\">\n        <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n          <input\n            className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\n            type=\"text\"\n            placeholder=\"Search Image Term...\"\n            onChange={handleChange}\n          />\n\n          <button\n            className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ImageSearch;\n","export const CONFIG = {\n  API_KEY: \"14533140-096f77e716eed7f36c8a10ec0\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ImageCard from \"./components/ImageCard\";\nimport ImageSearch from \"./components/ImageSearch\";\nimport { CONFIG } from \"./config\";\n\nconst App = () => {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://pixabay.com/api/?key=${CONFIG.API_KEY}&q=${term}&image_type=photo&pretty=true`\n      )\n      .then(\n        (d) => {\n          const { data } = d;\n          setImages(data.hits);\n          setIsLoading(false);\n        },\n        [term]\n      )\n      .catch((err) => console.error(\"err :\" + err));\n  });\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n      {!isLoading && !images.length && (\n        <h1 className=\"text-5xl text-center mx-auto mt-32\">\n          No Images Found. please try other Terms\n        </h1>\n      )}\n      {isLoading ? (\n        <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading ...</h1>\n      ) : (\n        <div className=\"grid md:grid-cols-2 sm:grid-cols-1 sm:gap-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {images.map((img) => (\n            <ImageCard image={img} key={img.id} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/main.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}